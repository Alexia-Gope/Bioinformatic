wget https://github.com/gmarcais/Jellyfish/releases/download/v2.2.9/jellyfish-2.2.9.tar.gz
tar -xvf jellyfish-2.2.9.tar.gz 
 cd jellyfish-2.2.9/
 #compilation
 ./configure
make
sudo make install

gunzip -d input.fastq.gz
https://bioinformatics.uconn.edu/genome-size-estimation-tutorial/#

jellyfish count -t 10 -C -m 19 -s 5G -o 19mer_out --min-qual-char=? /common/Tutorial/Genome_estimation/sample_read_1.fastq /common/Tutorial/Genome_estimation/sample_read_2.fastq

-t    -treads=unit32       Number of treads to be used in the run. eg: 1,2,3,..etc.
-C    -both-strands        Count both strands
-m    -mer-len=unit32      Length of the k-mer    
-s    -size=unit32         Hash size / memory allocation  
-o    -output=string       Output file name
--min-quality-char         Base quality value. Version 2.2.3 of Jellyfish uses the “Phred” score, where "?" = 30

#then export the kmer count histogram 
jellyfish histo -o 19mer_out.histo 19mer_out


#open R software
> getwd()
> setwd("/Users/seila")
dataframe19 <- read.table("19mer_out.histo") #load the data into dataframe19

#make figure
jpeg(file="saving_plot1.jpeg")
plot(dataframe19[1:200,], type="l") #plots the data points 1 through 200 in the dataframe19 using a line
dev.off()

#According to the graph, the single copy region would be between points 2 and 28. 
#Assuming the total number of data points is 9325, we can now calculate the total k-mers in the distribution.

sum(as.numeric(dataframe19[2:9325,1]*dataframe19[2:9325,2]))

#result
[1] 305659151
~ 305 Mb
